{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "YAGPDB CC",
	"scopeName": "source.yag",
	"patterns": [
		{
			"begin": "\\{\\{/\\*",
			"end": "\\*/\\}\\}",
			"name": "punctuation.section.embedded.yag",
			"contentName": "comment.block.yag"
		},
		{
			"begin": "\\{\\{",
			"beginCaptures": {
				"0": {
					"name": "punctuation.section.embedded.yag"
				}
			},
			"end": "\\}\\}",
			"endCaptures": {
				"0": {
					"name": "punctuation.section.embedded.yag"
				}
			},
			"patterns": [
				{
					"match": ":?=",
					"name": "keyword.operator.yag"
				},
				{
					"match": "\\$\\w+|\\$?\\.\\w*",
					"name": "variable.other.yag"
				},
				{
					"match": "\\b\\d+\\b",
					"name": "constant.numeric.yag"
				},
				{
					"match": "\\b(nil|true|false)\\b",
					"name": "constant.language.yag"
				},
				{
					"match": "\\b(if|else|range|template|block|define|with|end)\\b",
					"name": "keyword.control.yag"
				},
				{
					"match": "\\b(and|call|html|index|js|len|not|or|print(f|ln)?|urlquery|eq|ne|lt|le|gt|ge)\\b",
					"name": "support.function.yag"
				},
				{
					"match": "\\b(userArg|past(User|Nick)names|edit(Channel(Name|Topic)|Message(NoEscape)?|Nickname)|get(Channel|Member|Message)|onlineCount(Bots)?|(current|format)Time|humanize(Duration(Hour|Minute|Second)s|TimeSinceDays|Thousands)|db(Set(Expire)?|Incr|Get(Pattern(Reverse)?)?|Del(ByID)?|(Top|Bottom)Entries|Count)|to(Byte|Duration|Float|Int(64)?|Rune|String)|re(Find(All(Submatches)?)?|Replace)|complexMessage(Edit)?|currentUser(Age(Human|Minutes)|Created)|exec(Admin|CC)?|mention(Everyone|Here)|(add|give|has|mention|remove|take|targetHas)Role(ID|Name)|in(Fold)?|(low|upp)er|json|s?dict|newDate|c?slice|str(uctToSdict)?|joinStr|urlescape|title|kindOf|parseArgs|f?div|round(Ceil|Floor|Even)?|randInt|add|mult|log|mod|pow|adjective|noun|c(embed|arg)|s(plit|qrt|ub|eq|huffle|leep)|send(DM|Template(DM)?|Message(NoEscape)?(RetID)?)|delete(AllMessageReactions|Message(Reaction)?|Response|Trigger)|add(Message|Response)?Reactions|(cancelScheduled|schedule)UniqueCC)\\b",
					"name": "support.class.yag"
				},
				{
					"begin": "\"",
					"end": "\"",
					"name": "string.quoted.double.yag",
					"patterns": [
						{
							"include": "#string_placeholder"
						},
						{
							"include": "#string_escaped_char"
						},
						{
							"include": "#discord_markup"
						}
					]
				},
				{
					"begin": "'",
					"end": "'",
					"name": "string.quoted.single.yag",
					"patterns": [
						{
							"include": "#string_placeholder"
						},
						{
							"include": "#string_escaped_char"
						},
						{
							"include": "#discord_markup"
						}
					]
				},
				{
					"begin": "`",
					"end": "`",
					"name": "string.quoted.other.yag",
					"patterns": [
						{
							"include": "#string_placeholder"
						},
						{
							"include": "#discord_markup"
						}
					]
				},
				{
					"begin": "```",
					"end": "```",
					"name": "string.quoted.raw.yag",
					"patterns": [
						{
							"include": "#string_placeholder"
						},
						{
							"include": "#discord_markup"
						}
					]
				}
			]
		}
	],
	"repository": {
		"discord_markup": {
			"patterns": [
				{
					"begin": "\\*\\*",
					"end": "\\*\\*",
					"contentName": "markup.bold"
				},
				{
					"begin": "\\*",
					"end": "\\*",
					"contentName": "markup.italic"
				},
				{
					"begin": "\\_",
					"end": "\\_",
					"contentName": "markup.italic"
				},
				{
					"patterns": [
						{
							"begin": "\\_\\_",
							"end": "\\_\\_",
							"contentName": "markup.underline",
							"patterns": [
								{
									"begin": "\\*\\*",
									"end": "\\*\\*",
									"contentName": "markup.bold",
									"patterns": [
										{
											"begin": "\\_",
											"end": "\\_",
											"contentName": "markup.italic"
										}
									]
								},
								{
									"begin": "\\_",
									"end": "\\_",
									"contentName": "markup.italic"
								}
							]
						}
					]
				},
				{
					"patterns": [
						{
							"begin": "\\~\\~",
							"end": "\\~\\~",
							"contentName": "markup.deleted"
						}
					]
				}
			]
		},
		"string_escaped_char": {
			"patterns": [
				{
					"match": "\\G(\\\\([0-7]{3}|[abfnrtv\\\\'\"]|x[0-9a-fA-F]{2}|u[0-9a-fA-F]{4}|U[0-9a-fA-F]{8})|.)(?=')",
					"name": "constant.character.escape.yag"
				},
				{
					"match": "\\\\.",
					"name": "invalid.illegal.unknown-escape.yag"
				}
			]
		},
		"string_placeholder": {
			"patterns": [
				{
					"match": "(?x)%\n                        (\\d+\\$)?                                    # field (argument #)\n                        [#0\\- +']*                                  # flags\n                        [,;:_]?                                     # separator character (AltiVec)\n                        ((-?\\d+)|\\*(-?\\d+\\$)?)?                     # minimum field width\n                        (\\.((-?\\d+)|\\*(-?\\d+\\$)?)?)?                # precision\n                        [diouxXDOUeEfFgGaAcCsSqpnvtTbyYhHmMzZ%]     # conversion type\n                    ",
					"name": "constant.other.placeholder.yag"
				},
				{
					"match": "%",
					"name": "invalid.illegal.placeholder.yag"
				}
			]
		}
	}
}